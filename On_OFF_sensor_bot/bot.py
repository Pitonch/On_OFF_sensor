# from aiogram import Bot, Dispatcher, types
# from aiogram.utils import executor
# from config_reader import TOKEN
# # from config_reader import config
#
# bot = Bot(token=TOKEN)
# # bot = Bot(token=config.bot_token.get_secret_value())
# dp = Dispatcher(bot)
#
# # —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç—É –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
#
# # @dp.message_handler( –µ—Å–ª–∏ –ø—É—Å—Ç–æ —Ç–æ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç )
#
#
# @dp.message_handler(commands=['start'])
# async def process_start_command(message: types.Message):
#     await message.answer("–ü—Ä–∏–≤–µ—Ç!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¥–æ–º")  # answer –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –≤–æ–ø—Ä–æ—Å
#
#
# @dp.message_handler(commands=['help'])
# async def process_start_command(message: types.Message):
#     await message.reply("–°–º–æ—Ç—Ä–∏, —á—Ç–æ —è –º–æ–≥—É")  # reply –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –≤–æ–ø—Ä–æ—Å
#
#
# @dp.message_handler(commands=["dice"])
# async def cmd_dice(message: types.Message):
#     await message.answer_dice(emoji="üé≤")
#
#
# @dp.message_handler(commands=["text"])
# async def cmd_text(message: types.Message):
#     text = f'hello {message.from_user.full_name}'
#     await message.answer(text=text)
#     print(message.text)
#     print(message.from_user)
#
#
# # —Ç–∏–ø –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ,–ø–æ—ç—Ç–æ–º—É —Å–∫–æ–±–∫–∏ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ—á–∫–µ –æ—Å—Ç–∞—é—Ç—Å—è –ø—É—Å—Ç—ã–º–∏
#
#
# # @dp.message_handler()
# # async def echo_message(msg: types.Message):
# #     await bot.send_message(msg.from_user.id, msg.text)
#
#
# # –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å–º–æ—Ç—Ä–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
#
#
# if __name__ == '__main__':
#     executor.start_polling(dp)
